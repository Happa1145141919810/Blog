<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HappaBlog</title>
  
  
  <link href="http://blog.happanetwork.com/atom.xml" rel="self"/>
  
  <link href="http://blog.happanetwork.com/"/>
  <updated>2023-07-19T06:00:03.441Z</updated>
  <id>http://blog.happanetwork.com/</id>
  
  <author>
    <name>Happa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>订阅转换服务前端后端的搭建</title>
    <link href="http://blog.happanetwork.com/%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E6%9C%8D%E5%8A%A1%E5%89%8D%E7%AB%AF%E5%90%8E%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>http://blog.happanetwork.com/%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E6%9C%8D%E5%8A%A1%E5%89%8D%E7%AB%AF%E5%90%8E%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2023-07-15T13:28:58.000Z</published>
    <updated>2023-07-19T06:00:03.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p>我们使用默认的订阅转换配置即可，因此安装后端服务非常简单。使用以下命令安装后端项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -p 25500:25500 tindy2013/subconverter:latest</span><br></pre></td></tr></table></figure><p>因为该后端程序需要在计算机后台一直运行，因此采用了 <code>-d</code> 选项，并将容器将内部端口 25500 转发到主机端口 25500。<code>25500:25500</code> 前者是主机端口，后者为容器内部端口。安装结束后，我们使用以下命令验证安装是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:25500/version</span><br></pre></td></tr></table></figure><p>如果出现 <code>subconverter vx.x.x backend</code> 则说明容器已经成功运行。</p><h3 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h3><p>如果想要修改后端配置，可以进入容器内修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec -it sub /bin/sh</span><br></pre></td></tr></table></figure><p>由于默认文件使用的是 <code>pref.toml</code> ，编辑文件：</p><p>vi pref.toml</p><p>例如需要修改 <code>managed_config_prefix</code> 字段，输入 <code>/</code> 搜索 <code>127.0.0.1</code> 替换成自己的后端地址即可。</p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/CareyWang/sub-web.git</span><br></pre></td></tr></table></figure><p>然后进入该项目文件夹，修改 <code>.env</code> 文件的内容</p><p>改为你所配置的 <strong>后端项目地址</strong> 。如果采用 IP 地址的方式，则后端项目地址应为 <code>http://XXX.XXX.XXX.XXX:25500</code> (即 IP 地址 + 端口号的形式）。</p><p>&#x2F;src&#x2F;views&#x2F;Subconverter.vue      修改配置文件</p><p>然后在<strong>项目主目录</strong>下，运行以下命令构建并运行该项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t subweb-local:latest .</span><br><span class="line">docker run -d -p 58080:80 --restart always --name subweb subweb-local:latest</span><br></pre></td></tr></table></figure><p>此时前端项目也就构建完成并成功运行了。上述 <code>docker run</code> 命令将容器的 80 端口映射到了主机的 58080 端口。因此可以直接通过 IP+端口号 的形式来访问前端了，端口号为 58080。</p><p>注意，对于使用 IP地址+端口号 形式，如果无法访问前端项目，请检查在服务器提供商控制台检查相应的端口是否开启，前端的端口 58080。如果后端也采用 IP地址+端口号 的形式，也需要开启 25500 端口。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;后端&quot;&gt;&lt;a href=&quot;#后端&quot; class=&quot;headerlink&quot; title=&quot;后端&quot;&gt;&lt;/a&gt;后端&lt;/h2&gt;&lt;p&gt;我们使用默认的订阅转换配置即可，因此安装后端服务非常简单。使用以下命令安装后端项目：&lt;/p&gt;
&lt;figure class=&quot;highligh</summary>
      
    
    
    
    <category term="代理节点那些事" scheme="http://blog.happanetwork.com/categories/%E4%BB%A3%E7%90%86%E8%8A%82%E7%82%B9%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="vps" scheme="http://blog.happanetwork.com/tags/vps/"/>
    
    <category term="docker" scheme="http://blog.happanetwork.com/tags/docker/"/>
    
    <category term="节点" scheme="http://blog.happanetwork.com/tags/%E8%8A%82%E7%82%B9/"/>
    
    <category term="订阅" scheme="http://blog.happanetwork.com/tags/%E8%AE%A2%E9%98%85/"/>
    
    <category term="clash" scheme="http://blog.happanetwork.com/tags/clash/"/>
    
  </entry>
  
  <entry>
    <title>代理节点那些事</title>
    <link href="http://blog.happanetwork.com/%E4%BB%A3%E7%90%86%E8%8A%82%E7%82%B9%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://blog.happanetwork.com/%E4%BB%A3%E7%90%86%E8%8A%82%E7%82%B9%E9%82%A3%E4%BA%9B%E4%BA%8B/</id>
    <published>2023-07-15T13:28:30.000Z</published>
    <updated>2023-07-15T13:28:30.532Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Types.xcspec-not-found</title>
    <link href="http://blog.happanetwork.com/Types-xcspec-not-found/"/>
    <id>http://blog.happanetwork.com/Types-xcspec-not-found/</id>
    <published>2023-07-03T05:34:42.000Z</published>
    <updated>2023-07-03T05:35:42.919Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/AloneMonkey/MonkeyDev/issues/266">https://github.com/AloneMonkey/MonkeyDev/issues/266</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Xcode/PrivatePlugIns/IDEOSXSupportCore.ideplugin/Contents/Resources /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Xcode/Specifications</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/AloneMonkey/MonkeyDev/issues/266&quot;&gt;https://github.com/AloneMonkey/MonkeyDev/issues/266&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    <category term="杂乱的教程" scheme="http://blog.happanetwork.com/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="http://blog.happanetwork.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Mac" scheme="http://blog.happanetwork.com/tags/Mac/"/>
    
    <category term="dpkg" scheme="http://blog.happanetwork.com/tags/dpkg/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装dpkg</title>
    <link href="http://blog.happanetwork.com/Mac%E5%AE%89%E8%A3%85dpkg/"/>
    <id>http://blog.happanetwork.com/Mac%E5%AE%89%E8%A3%85dpkg/</id>
    <published>2023-07-01T14:08:56.000Z</published>
    <updated>2023-07-02T11:18:58.550Z</updated>
    
    <content type="html"><![CDATA[<p>1.安装Xcode</p><p>2.安装 Xcode Command Tools</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><p>3.同意 Xcode license agreements</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xcodebuild -license</span><br></pre></td></tr></table></figure><p>agree</p><p>4.安装 Macports</p><p><a href="http://www.macports.org/install.php">http://www.macports.org/install.php</a></p><p>4.安装 dpkg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/opt/local/bin:/opt/local/sbin:$PATH</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo port -f install dpkg</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.安装Xcode&lt;/p&gt;
&lt;p&gt;2.安装 Xcode Command Tools&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp</summary>
      
    
    
    
    <category term="杂乱的教程" scheme="http://blog.happanetwork.com/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="http://blog.happanetwork.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Mac" scheme="http://blog.happanetwork.com/tags/Mac/"/>
    
    <category term="dpkg" scheme="http://blog.happanetwork.com/tags/dpkg/"/>
    
  </entry>
  
  <entry>
    <title>使用青龙面板实现阿里云盘自动签到</title>
    <link href="http://blog.happanetwork.com/%E4%BD%BF%E7%94%A8%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E5%AE%9E%E7%8E%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/"/>
    <id>http://blog.happanetwork.com/%E4%BD%BF%E7%94%A8%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E5%AE%9E%E7%8E%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/</id>
    <published>2023-03-06T01:35:24.000Z</published>
    <updated>2023-03-06T01:57:20.274Z</updated>
    
    <content type="html"><![CDATA[<p>1.先在<a href="https://github.com/Happa1145141919810/aliYunPanCheckIn">GitHub仓库</a>下载源码</p><p>2.打开script.js</p><p>填入telegrambot API令牌和群组ID</p><p>阿里云盘刷新令牌</p><p>保存</p><p><img src="https://blog.happaa.com/img/%E4%BD%BF%E7%94%A8%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E5%AE%9E%E7%8E%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/1.png" alt="1"></p><p>3.打开青龙面板并登录</p><p>要先下载依赖，依赖管理 - NodeJs - 新建依赖 - 名称输入：node-fetch@2<br>node-fetch@2 只是一个调用http的，如果实在版本差异导致调用失败的，可以换成其他，比如 axios</p><p>在脚本管理中上传script.js</p><p>在定时任务里新建任务 命令是 task script.js</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.先在&lt;a href=&quot;https://github.com/Happa1145141919810/aliYunPanCheckIn&quot;&gt;GitHub仓库&lt;/a&gt;下载源码&lt;/p&gt;
&lt;p&gt;2.打开script.js&lt;/p&gt;
&lt;p&gt;填入telegrambot API令牌和群组I</summary>
      
    
    
    
    <category term="vps那些事" scheme="http://blog.happanetwork.com/categories/vps%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="vps" scheme="http://blog.happanetwork.com/tags/vps/"/>
    
    <category term="docker" scheme="http://blog.happanetwork.com/tags/docker/"/>
    
    <category term="青龙面板" scheme="http://blog.happanetwork.com/tags/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/"/>
    
    <category term="阿里云盘" scheme="http://blog.happanetwork.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/"/>
    
    <category term="签到" scheme="http://blog.happanetwork.com/tags/%E7%AD%BE%E5%88%B0/"/>
    
  </entry>
  
  <entry>
    <title>安装青龙面板</title>
    <link href="http://blog.happanetwork.com/%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/"/>
    <id>http://blog.happanetwork.com/%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/</id>
    <published>2023-03-06T01:01:13.000Z</published>
    <updated>2023-03-06T01:33:50.282Z</updated>
    
    <content type="html"><![CDATA[<h3 id="docker-部署"><a href="#docker-部署" class="headerlink" title="docker 部署"></a>docker 部署</h3><p>1.docker 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -sSL get.docker.com | sh</span><br></pre></td></tr></table></figure><p>2.配置国内镜像源 Configure domestic mirror sources</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://0b27f0a81a00f3560fbdc00ddd2f99e0.mirror.swr.myhuaweicloud.com&quot;,</span><br><span class="line">    &quot;https://ypzju6vq.mirror.aliyuncs.com&quot;,</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">    &quot;http://hub-mirror.c.163.com&quot;,</span><br><span class="line">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>3.启动容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">  -v $PWD/ql/data:/ql/data \</span><br><span class="line">  -p 5700:5700 \</span><br><span class="line">  --name qinglong \</span><br><span class="line">  --hostname qinglong \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  whyour/qinglong:latest</span><br></pre></td></tr></table></figure><h3 id="docker-compose-部署"><a href="#docker-compose-部署" class="headerlink" title="docker-compose 部署"></a>docker-compose 部署</h3><ol><li><p>docker-compose 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li><li><p>启动容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. mkdir qinglong</span><br><span class="line">   wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">   # </span><span class="language-bash">启动</span></span><br><span class="line"></span><br><span class="line">   docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">   # </span><span class="language-bash">停止</span></span><br><span class="line"></span><br><span class="line">   docker-compose down</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>访问</p><p>打开你的浏览器，访问 http:&#x2F;&#x2F;{ip}:5700</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>内置命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 更新并重启青龙</span><br><span class="line">ql update                                                    </span><br><span class="line"># 运行自定义脚本extra.sh</span><br><span class="line">ql extra                                                     </span><br><span class="line"># 添加单个脚本文件</span><br><span class="line">ql raw &lt;file_url&gt;                                             </span><br><span class="line"># 添加单个仓库的指定脚本</span><br><span class="line">ql repo &lt;repo_url&gt; &lt;whitelist&gt; &lt;blacklist&gt; &lt;dependence&gt; &lt;branch&gt; &lt;extensions&gt;</span><br><span class="line"># 删除旧日志</span><br><span class="line">ql rmlog &lt;days&gt;                                              </span><br><span class="line"># 启动tg-bot</span><br><span class="line">ql bot                                                       </span><br><span class="line"># 检测青龙环境并修复</span><br><span class="line">ql check                                                     </span><br><span class="line"># 重置登录错误次数</span><br><span class="line">ql resetlet                                                  </span><br><span class="line"># 禁用两步登录</span><br><span class="line">ql resettfa                                                  </span><br><span class="line"></span><br><span class="line"># 依次执行，如果设置了随机延迟，将随机延迟一定秒数</span><br><span class="line">task &lt;file_path&gt;                                             </span><br><span class="line"># 依次执行，无论是否设置了随机延迟，均立即运行，前台会输出日，同时记录在日志文件中</span><br><span class="line">task &lt;file_path&gt; now                                         </span><br><span class="line"># 并发执行，无论是否设置了随机延迟，均立即运行，前台不产生日，直接记录在日志文件中，且可指定账号执行</span><br><span class="line">task &lt;file_path&gt; conc &lt;env_name&gt; &lt;account_number&gt;(可选的) </span><br><span class="line"># 指定账号执行，无论是否设置了随机延迟，均立即运行 </span><br><span class="line">task &lt;file_path&gt; desi &lt;env_name&gt; &lt;account_number&gt;      </span><br><span class="line"># 设置任务超时时间   </span><br><span class="line">task -m &lt;max_time&gt; &lt;file_path&gt;</span><br><span class="line"># 实时打印任务日志，创建定时任务时，不用携带此参数</span><br><span class="line">task -l &lt;file_path&gt;</span><br></pre></td></tr></table></figure><ol><li>参数说明</li></ol><ul><li>file_url: 脚本地址</li><li>repo_url: 仓库地址</li><li>whitelist: 拉取仓库时的白名单，即就是需要拉取的脚本的路径包含的字符串，多个竖线分割</li><li>blacklist: 拉取仓库时的黑名单，即就是需要拉取的脚本的路径不包含的字符串，多个竖线分割</li><li>dependence: 拉取仓库需要的依赖文件，会直接从仓库拷贝到scripts下的仓库目录，不受黑名单影响，多个竖线分割</li><li>extensions: 拉取仓库的文件后缀，多个竖线分割</li><li>branch: 拉取仓库的分支</li><li>days: 需要保留的日志的天数</li><li>file_path: 任务执行时的文件路径</li><li>env_name: 任务执行时需要并发或者指定时的环境变量名称</li><li>account_number: 任务执行时指定某个环境变量需要执行的账号序号</li><li>max_time: 超时时间，后缀”s”代表秒(默认值), “m”代表分, “h”代表小时, “d”代表天</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;docker-部署&quot;&gt;&lt;a href=&quot;#docker-部署&quot; class=&quot;headerlink&quot; title=&quot;docker 部署&quot;&gt;&lt;/a&gt;docker 部署&lt;/h3&gt;&lt;p&gt;1.docker 安装&lt;/p&gt;
&lt;figure class=&quot;highlight s</summary>
      
    
    
    
    <category term="vps那些事" scheme="http://blog.happanetwork.com/categories/vps%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="vps" scheme="http://blog.happanetwork.com/tags/vps/"/>
    
    <category term="docker" scheme="http://blog.happanetwork.com/tags/docker/"/>
    
    <category term="青龙面板" scheme="http://blog.happanetwork.com/tags/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>安装docker容器</title>
    <link href="http://blog.happanetwork.com/%E5%AE%89%E8%A3%85docker%E5%AE%B9%E5%99%A8/"/>
    <id>http://blog.happanetwork.com/%E5%AE%89%E8%A3%85docker%E5%AE%B9%E5%99%A8/</id>
    <published>2023-03-05T23:26:05.000Z</published>
    <updated>2023-03-05T23:52:39.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="使用脚本自动安装"><a href="#使用脚本自动安装" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h2><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：</p><blockquote><p>若你想安装测试版的 Docker, 请从 test.docker.com 获取脚本</p></blockquote><p># $ curl -fsSL test.docker.com -o get-docker.sh</p><p>$ curl -fsSL get.docker.com -o get-docker.sh</p><p>$ sudo sh get-docker.sh –mirror Aliyun</p><p># $ sudo sh get-docker.sh –mirror AzureChinaCloud</p><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p><h1 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h1><h2 id="使用脚本自动安装-1"><a href="#使用脚本自动安装-1" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h2><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Debian 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：</p><blockquote><p>若你想安装测试版的 Docker, 请从 test.docker.com 获取脚本</p></blockquote><p># $ curl -fsSL test.docker.com -o get-docker.sh</p><p>$ curl -fsSL get.docker.com -o get-docker.sh</p><p>$ sudo sh get-docker.sh –mirror Aliyun</p><p># $ sudo sh get-docker.sh –mirror AzureChinaCloud</p><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p><h2 id="启动-Docker"><a href="#启动-Docker" class="headerlink" title="启动 Docker"></a>启动 Docker</h2><p>$ sudo systemctl enable docker</p><p>$ sudo systemctl start docker</p><h2 id="建立-docker-用户组"><a href="#建立-docker-用户组" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h2><p>默认情况下，<code>docker</code> 命令会使用 <a href="https://en.wikipedia.org/wiki/Unix_domain_socket">Unix socket</a> 与 Docker 引擎通讯。而只有 <code>root</code> 用户和 <code>docker</code> 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 <code>root</code> 用户。因此，更好地做法是将需要使用 <code>docker</code> 的用户加入 <code>docker</code> 用户组。</p><p>建立 <code>docker</code> 组：</p><p>$ sudo groupadd docker</p><p>将当前用户加入 <code>docker</code> 组：</p><p>$ sudo usermod -aG docker $USER</p><p>退出当前终端并重新登录，进行如下测试。</p><h2 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h2><p>$ docker run –rm hello-world</p><p>Unable to find image ‘hello-world:latest’ locally</p><p>latest: Pulling from library&#x2F;hello-world</p><p>b8dfde127a29: Pull complete</p><p>Digest: sha256:308866a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24</p><p>Status: Downloaded newer image for hello-world:latest</p><p>Hello from Docker!</p><p>This message shows that your installation appears to be working correctly.</p><p>To generate this message, Docker took the following steps:</p><p> \1. The Docker client contacted the Docker daemon.</p><p> \2. The Docker daemon pulled the “hello-world” image from the Docker Hub.</p><p>​    (amd64)</p><p> \3. The Docker daemon created a new container from that image which runs the</p><p>​    executable that produces the output you are currently reading.</p><p> \4. The Docker daemon streamed that output to the Docker client, which sent it</p><p>​    to your terminal.</p><p>To try something more ambitious, you can run an Ubuntu container with:</p><p> $ docker run -it ubuntu bash</p><p>Share images, automate workflows, and more with a free Docker ID:</p><p> <a href="https://hub.docker.com/">https://hub.docker.com/</a></p><p>For more examples and ideas, visit:</p><p> <a href="https://docs.docker.com/get-started/">https://docs.docker.com/get-started/</a></p><p>若能正常输出以上信息，则说明安装成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ubuntu&quot;&gt;&lt;a href=&quot;#Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu&quot;&gt;&lt;/a&gt;Ubuntu&lt;/h1&gt;&lt;h2 id=&quot;使用脚本自动安装&quot;&gt;&lt;a href=&quot;#使用脚本自动安装&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="vps那些事" scheme="http://blog.happanetwork.com/categories/vps%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="vps" scheme="http://blog.happanetwork.com/tags/vps/"/>
    
    <category term="docker" scheme="http://blog.happanetwork.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>VPS那些事</title>
    <link href="http://blog.happanetwork.com/VPS%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://blog.happanetwork.com/VPS%E9%82%A3%E4%BA%9B%E4%BA%8B/</id>
    <published>2023-03-05T23:25:21.000Z</published>
    <updated>2023-03-05T23:25:21.085Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>如何将节点添加到Clash</title>
    <link href="http://blog.happanetwork.com/%E5%A6%82%E4%BD%95%E5%B0%86%E8%8A%82%E7%82%B9%E6%B7%BB%E5%8A%A0%E5%88%B0Clash/"/>
    <id>http://blog.happanetwork.com/%E5%A6%82%E4%BD%95%E5%B0%86%E8%8A%82%E7%82%B9%E6%B7%BB%E5%8A%A0%E5%88%B0Clash/</id>
    <published>2023-02-04T11:01:47.000Z</published>
    <updated>2023-02-04T11:07:56.596Z</updated>
    
    <content type="html"><![CDATA[<p>打开<a href="https://sc.happaa.com/">https://sc.happaa.com/</a></p><p><img src="https://blog.happaa.com/img/%E5%A6%82%E4%BD%95%E5%B0%86%E8%8A%82%E7%82%B9%E6%B7%BB%E5%8A%A0%E5%88%B0Clash/1.png" alt="1"></p><p>把节点粘贴到订阅链接中</p><p>选择后端地址</p><p>选择远程配置</p><p><img src="https://blog.happaa.com/img/%E5%A6%82%E4%BD%95%E5%B0%86%E8%8A%82%E7%82%B9%E6%B7%BB%E5%8A%A0%E5%88%B0Clash/2.png" alt="2"></p><p>生成订阅链接</p><p>导入clash</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开&lt;a href=&quot;https://sc.happaa.com/&quot;&gt;https://sc.happaa.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.happaa.com/img/%E5%A6%82%E4%BD%95%E5%B0%86%E8</summary>
      
    
    
    
    <category term="杂乱的教程" scheme="http://blog.happanetwork.com/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="http://blog.happanetwork.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Clash" scheme="http://blog.happanetwork.com/tags/Clash/"/>
    
  </entry>
  
  <entry>
    <title>将Mac设置为旁路网关实现硬件连接国际互联网</title>
    <link href="http://blog.happanetwork.com/%E5%B0%86Mac%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6%E8%BF%9E%E6%8E%A5%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91/"/>
    <id>http://blog.happanetwork.com/%E5%B0%86Mac%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6%E8%BF%9E%E6%8E%A5%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91/</id>
    <published>2023-01-28T05:09:55.000Z</published>
    <updated>2023-03-06T01:56:19.427Z</updated>
    
    <content type="html"><![CDATA[<p>使用clash&#x2F;surge作为代理工具并开启 设置为系统代理 和 增强模式</p><p><img src="https://blog.happaa.com/img/%E5%B0%86Mac%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6%E8%BF%9E%E6%8E%A5%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91/1.png" alt="1"></p><p>在 系统偏好设置 网络 中点击 高级 </p><p><img src="https://blog.happaa.com//img/%E5%B0%86Mac%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6%E8%BF%9E%E6%8E%A5%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91/2.png" alt="2"></p><p>在 TCP&#x2F;IP 中将 配置IPv4 改为 手动 </p><p>IPv4地址填写一个在本地网络网段中的IP地址</p><p>路由器填写路由器IP地址</p><p><img src="https://blog.happaa.com//img/%E5%B0%86Mac%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6%E8%BF%9E%E6%8E%A5%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91/3.png" alt="3"></p><p>应用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用clash&amp;#x2F;surge作为代理工具并开启 设置为系统代理 和 增强模式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.happaa.com/img/%E5%B0%86Mac%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%81%</summary>
      
    
    
    
    <category term="杂乱的教程" scheme="http://blog.happanetwork.com/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="http://blog.happanetwork.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Mac" scheme="http://blog.happanetwork.com/tags/Mac/"/>
    
    <category term="软路由" scheme="http://blog.happanetwork.com/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>创建iOS发布证书并配置文字和CallKit免后台推送权限</title>
    <link href="http://blog.happanetwork.com/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/"/>
    <id>http://blog.happanetwork.com/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/</id>
    <published>2022-12-29T02:54:32.000Z</published>
    <updated>2023-02-01T04:48:44.980Z</updated>
    
    <content type="html"><![CDATA[<ul><li>先登陆开发者页面</li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229114317226.png" alt="image-20221229114317226"></p><ul><li>创建一本Distribution证书 <del>Apple Distribution和iOS Distribution (App Store and Ad Hoc)都可以</del></li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229114828438.png" alt="image-20221229114828438"></p><ul><li>上传你本机的Certificate Signing Request</li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229115421345.png" alt="image-20221229115421345"></p><ul><li>下载证书</li><li>导出为p12备用</li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229115624942.png" alt="image-20221229115624942"></p><ul><li>在标识符处新建一个带推送的Identifiers</li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229115843451.png" alt="image-20221229115843451"></p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229115901454.png" alt="image-20221229115901454"></p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229115918495.png" alt="image-20221229115918495"></p><ul><li><p>这里随便填  笔者就创建一个com.happaa.demo</p></li><li><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120039454.png" alt="image-20221229120039454"></p></li><li><p>记得划到下面勾选 Push Notifications</p></li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120123319.png" alt="image-20221229120123319"></p><p>continue register</p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120230154.png" alt="image-20221229120230154"></p><ul><li><p>再回到Certificates</p></li><li><p>还是点新建的按钮</p></li><li><p>勾选VoIP Services Certificate</p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120447624.png" alt="image-20221229120447624"></p></li><li><p>continue</p></li><li><p>选择刚刚创建的Identifiers</p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120555613.png" alt="image-20221229120555613"></p></li><li><p>continue</p></li><li><p>再次上传Certificate Signing Request</p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120737989.png" alt="image-20221229120737989"></p></li><li><p>continue</p><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120817093.png" alt="image-20221229120817093"></p></li><li><p>这里不需要download</p></li><li><p>来到Profiles</p></li><li><p>新建</p></li><li><p>选择Distribution</p><ul><li>Ad Hoc</li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229120921225.png" alt="image-20221229120921225"></p></li><li><p>选择刚刚配置了权限的Identifiers</p></li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229121018795.png" alt="image-20221229121018795"></p><ul><li>选择distribution证书</li></ul><p><img src="https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E5%AD%97%E5%92%8CCallKit%E5%85%8D%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E6%9D%83%E9%99%90/image-20221229121141548.png" alt="image-20221229121141548"></p><ul><li>勾选设备</li><li>命名</li><li>下载配置文件</li><li>最后就是配合p12签名啦</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;先登陆开发者页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.happaa.com/images/%E5%88%9B%E5%BB%BAiOS%E5%8F%91%E5%B8%83%E8%AF%81%E4%B9%A6%E5%B9%B6%</summary>
      
    
    
    
    <category term="杂乱的教程" scheme="http://blog.happanetwork.com/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="iOS" scheme="http://blog.happanetwork.com/tags/iOS/"/>
    
    <category term="开发者" scheme="http://blog.happanetwork.com/tags/%E5%BC%80%E5%8F%91%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>macOS安装pip3</title>
    <link href="http://blog.happanetwork.com/macOS%E5%AE%89%E8%A3%85pip3/"/>
    <id>http://blog.happanetwork.com/macOS%E5%AE%89%E8%A3%85pip3/</id>
    <published>2022-12-29T02:50:19.000Z</published>
    <updated>2022-12-29T02:52:51.561Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install python3</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 get-pip.py</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Termius.app已损坏，无法打开您应该将它移到废纸篓</title>
    <link href="http://blog.happanetwork.com/Termius-app%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E6%82%A8%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/"/>
    <id>http://blog.happanetwork.com/Termius-app%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E6%82%A8%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/</id>
    <published>2022-12-29T02:47:44.000Z</published>
    <updated>2023-02-01T05:02:44.628Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -d com.apple.quarantine /Applications/*.app</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>旧版Xcode支持iOS16</title>
    <link href="http://blog.happanetwork.com/%E6%97%A7%E7%89%88Xcode%E6%94%AF%E6%8C%81iOS16/"/>
    <id>http://blog.happanetwork.com/%E6%97%A7%E7%89%88Xcode%E6%94%AF%E6%8C%81iOS16/</id>
    <published>2022-12-28T10:32:11.000Z</published>
    <updated>2022-12-28T10:36:52.835Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/RayJiang16/iOSDeviceSupport">https://github.com/RayJiang16/iOSDeviceSupport</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O https://github.com/RayJiang16/iOSDeviceSupport/raw/main/download.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh download.sh 16.0</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/RayJiang16/iOSDeviceSupport&quot;&gt;https://github.com/RayJiang16/iOSDeviceSupport&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>安装EasyDev</title>
    <link href="http://blog.happanetwork.com/%E5%AE%89%E8%A3%85EasyDev/"/>
    <id>http://blog.happanetwork.com/%E5%AE%89%E8%A3%85EasyDev/</id>
    <published>2022-12-27T04:34:33.000Z</published>
    <updated>2022-12-27T04:36:02.303Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo git clone --recursive https://github.com/lemon4ex/EasyDev.git /opt/EasyDev</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/EasyDev/bin</span><br><span class="line">chmod +x ed-install</span><br><span class="line">./ed-install</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>安装MonkeyDev</title>
    <link href="http://blog.happanetwork.com/%E5%AE%89%E8%A3%85MonkeyDev/"/>
    <id>http://blog.happanetwork.com/%E5%AE%89%E8%A3%85MonkeyDev/</id>
    <published>2022-12-27T04:31:56.000Z</published>
    <updated>2022-12-27T04:34:16.165Z</updated>
    
    <content type="html"><![CDATA[<p>1、选择指定的Xcode进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xcode-select -s /Applications/Xcode-beta.app</span><br></pre></td></tr></table></figure><p>2、默认安装的Xcode</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select -p</span><br></pre></td></tr></table></figure><p>3、执行安装命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/AloneMonkey/MonkeyDev/master/bin/md-install)&quot;</span><br></pre></td></tr></table></figure><p>4、卸载命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/AloneMonkey/MonkeyDev/master/bin/md-uninstall)&quot;</span><br></pre></td></tr></table></figure><p>5、更新命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/AloneMonkey/MonkeyDev/master/bin/md-update)&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、选择指定的Xcode进行安装&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>安装ldid</title>
    <link href="http://blog.happanetwork.com/%E5%AE%89%E8%A3%85ldid/"/>
    <id>http://blog.happanetwork.com/%E5%AE%89%E8%A3%85ldid/</id>
    <published>2022-12-27T04:29:53.000Z</published>
    <updated>2022-12-27T04:31:20.105Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ldid</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>theos的配置</title>
    <link href="http://blog.happanetwork.com/theos%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.happanetwork.com/theos%E7%9A%84%E9%85%8D%E7%BD%AE/</id>
    <published>2022-12-27T04:27:17.000Z</published>
    <updated>2022-12-27T04:27:55.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="theos的配置"><a href="#theos的配置" class="headerlink" title="theos的配置"></a>theos的配置</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export THEOS=/opt/theos</span><br></pre></td></tr></table></figure><p>下载theos到指定的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/theos/theos.git $THEOS </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;theos的配置&quot;&gt;&lt;a href=&quot;#theos的配置&quot; class=&quot;headerlink&quot; title=&quot;theos的配置&quot;&gt;&lt;/a&gt;theos的配置&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.happanetwork.com/hello-world/"/>
    <id>http://blog.happanetwork.com/hello-world/</id>
    <published>2022-12-27T04:15:03.701Z</published>
    <updated>2022-12-31T09:07:50.840Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
